import t from"jsonwebtoken";import a from"bcrypt";export default class e{static async validationTokenRoutes(t,a,s){let{token:n}=t.cookies.token?t.cookies:t.headers;try{await e.validationToken(n),s()}catch(r){return a.status(401).json({message:r.message})}}static validationToken(a){return a?new Promise((e,s)=>{t.verify(a,process.env.SECRET_TOKEN,(t,a)=>{t&&s(t),e(a)})}):Error("Token no dado")}static createToken(a){return new Promise((e,s)=>{t.sign(a,process.env.SECRET_TOKEN,{expiresIn:"365d"},(t,a)=>{t&&s(t),e(a)})})}static validateSchema(t){return(a,e,s)=>{try{t.parse(a.body),s()}catch(n){return e.status(400).json({e:n})}}}static async hashPassword(t){return await a.hash(t,await a.genSalt(10))}static async comparePassword(t,e){return await a.compare(t,e)}};